<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Work | Md. Al-Amin Khandaker</title>
    <link>https://al-amin.tech/tag/work/</link>
      <atom:link href="https://al-amin.tech/tag/work/index.xml" rel="self" type="application/rss+xml" />
    <description>Work</description>
    <generator>Wowchemy (https://wowchemy.com)</generator><language>en-us</language><lastBuildDate>Mon, 11 Nov 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://al-amin.tech/media/icon_hua2ec155b4296a9c9791d015323e16eb5_11927_512x512_fill_lanczos_center_3.png</url>
      <title>Work</title>
      <link>https://al-amin.tech/tag/work/</link>
    </image>
    
    <item>
      <title>DataArmorGate DB (Gate DB)</title>
      <link>https://al-amin.tech/project/dagdb/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://al-amin.tech/project/dagdb/</guid>
      <description>&lt;p&gt;DataArmor Gate DB is a turn key solution for always-on encryption of databases that contain highly sensitive data or operate in non-trusted zones such as the cloud. The contents of the database are always encrypted and all queries are performed over encrypted data only. The encryption keys are stored separately from the database, and data is never decrypted at the database side. This is in contrast to current database solutions which partially decrypt the data when performing queries.&lt;/p&gt;
&lt;h3 id=&#34;notable-features-of-gate-db&#34;&gt;Notable features of Gate DB:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;data is always-on encryption(during communication, at rest, during processing).&lt;/li&gt;
&lt;li&gt;The contents of the database are always encrypted and all queries are performed over encrypted data.&lt;/li&gt;
&lt;li&gt;The encryption keys are not stored in the database.&lt;/li&gt;
&lt;li&gt;It supports bring-your-own-key(BIOK)&lt;/li&gt;
&lt;li&gt;data is never decrypted at the database side which is different from traditional database systems.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;key-contributions&#34;&gt;Key contributions:&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Implemented Homomorphic-encryption(HE) to perform ‘SQL aggregate functions’.&lt;/li&gt;
&lt;li&gt;Reduced the bulk insertion and encryption time by 5 times by eﬀicient implementation of HE algorithms and multi-processing in Rust.&lt;/li&gt;
&lt;li&gt;Implemented Lifted-ElGamal over prime field as Somewhat-Homomorphic-Encryption (using BLS-12 elliptic curve pairing) for Homomorphic addition of cipher-text.&lt;/li&gt;
&lt;li&gt;Improved the bulk data transmission using gRPC between client and the proxy.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Viadesk</title>
      <link>https://al-amin.tech/project/viadesk/</link>
      <pubDate>Wed, 30 May 2012 00:00:00 +0000</pubDate>
      <guid>https://al-amin.tech/project/viadesk/</guid>
      <description>&lt;p&gt;The Viadesk social intranet is a SaaS platform that is adopted by several Govt and private organizations.&lt;/p&gt;
&lt;h3 id=&#34;notable-features&#34;&gt;Notable features&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;It allows everyone in an organization (and outside of it) to communicate, collaborate and share knowledge intuitively, in a user-friendly environment.&lt;/li&gt;
&lt;li&gt;The intranet is mobile, guarantees the security of your work, and integrates other tools and systems in a flexible and controllable way. Welcome to Viadesk!&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;key-contributions&#34;&gt;Key contributions&lt;/h3&gt;
&lt;p&gt;I worked on this product for three and a half years. At that time I developed several core features for its iOS native client(mostly used Objective-C, before swift adopted).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Made technical specifications (Class and Sequence diagram) from Bizness requirements.&lt;/li&gt;
&lt;li&gt;Developed new features and fixed bugs.&lt;/li&gt;
&lt;li&gt;Among the technical challenges of this project; are offline file management, caching, custom calendar, and securing files inside the app sandbox.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>
